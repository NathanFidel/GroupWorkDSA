// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.
import ballerina/io;
import ballerina/http;

listener http:Listener ep0 = new (9090, config = {host: "localhost"});

// Define a sample list of lecturers for demonstration purposes
var yourListOfLecturers = [
    {"name": "Lecturer 1", "department": "Department A"},
    {"name": "Lecturer 2", "department": "Department B"}
    // Add more lecturer objects as needed
];

// Define sample data for lecturerDetails, lecturersTeachingCourse, and lecturersInOffice for demonstration purposes
var lecturerDetails = {
    "name": "Sample Lecturer",
    "department": "Sample Department"
    // Add other lecturer details as needed
};

var lecturersTeachingCourse = [
    {"name": "Lecturer 1", "course": "Course A"},
    {"name": "Lecturer 2", "course": "Course B"}
    // Add more lecturer-course mappings as needed
];

var lecturersInOffice = [
    {"name": "Lecturer 1", "officeNumber": "Office 101"},
    {"name": "Lecturer 2", "officeNumber": "Office 102"}
    // Add more lecturer-office mappings as needed
];

// The single 'main' function
# Description.
public function main() {
    // Add your main program logic here
    io:println("Hello, Ballerina!");
}

service / on ep0 {
    # Retrieve a list of all lecturers
    #
    # + return - A list of all lecturers 
    resource function get lecturers() returns Lecturer[] {
        return yourListOfLecturers;
    }
   
# Add a new lecturer
#
# + payload - New lecturer details 
# + return - Successfully added a new lecturer 
resource function post lecturers(@http:Payload NewLecturer payload) returns http:Response {
    // Your logic to add the new lecturer here

    // Assuming you have added the new lecturer successfully, you can return a Created response
    // with a 201 status code and a response body (if needed)
    var response =  new http:Response();
    response.statusCode = 201;
    response.setPayload("Successfully added a new lecturer"); // You can set the response body here
    return response;
}
    # Retrieve details of a specific lecturer
    #
    # + staffNumber - parameter description 
    # + return - Details of the specific lecturer 
    resource function get lecturers/[string staffNumber]() returns Lecturer {
        return lecturerDetails;
    }
    # Update an existing lecturer's information
#
# + staffNumber - parameter description 
# + payload - Updated lecturer details 
# + return - Successfully updated lecturer information 
resource function put lecturers/[string staffNumber](@http:Payload Lecturer payload) returns http:Response {
    // Your logic to update the lecturer's information here

    // Assuming you have updated the lecturer successfully, you can return an Ok response
    var response = new http:Response();
    response.statusCode = 200;
    response.setPayload("Successfully updated lecturer information"); // You can set the response body here

    return response;
}

# Delete a lecturer's record by their staff number
#
# + staffNumber - parameter description 
# + return - Successfully deleted the lecturer 
resource function delete lecturers/[string staffNumber]() returns http:Response {
    // Your logic to delete the lecturer's record here

    // Assuming you have deleted the lecturer successfully, you can return a NoContent response
    var response = new http:Response();
    response.statusCode = 204;
    response.setPayload("Successfully deleted the lecturer"); // You can set the response body here

    return response;
}
    # Retrieve all lecturers that teach a certain course
    #
    # + courseCode - parameter description 
    # + return - List of lecturers teaching the course 
    resource function get lecturers/courses/[string courseCode]() returns Lecturer[] {
        return lecturersTeachingCourse;
    }
    # Retrieve all lecturers that sit in the same office
    #
    # + officeNumber - parameter description 
    # + return - List of lecturers in the same office 
    resource function get lecturers/offices/[string officeNumber]() returns Lecturer[] {
        return lecturersInOffice;
    }
}
